name: CI/CD Deploy Simple Istio App

on:
  push:
    branches: ['main']

jobs:
  build-and-deploy:
    runs-on: self-hosted

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Build & Push Frontend
      - name: Build & Push Frontend
        run: |
          IMAGE=docker.io/${{ secrets.DOCKERHUB_USERNAME }}/simple-frontend:${GITHUB_SHA}
          docker build -t $IMAGE ./frontend
          docker push $IMAGE
          echo "FRONTEND_IMAGE=$IMAGE" >> $GITHUB_ENV

      # Build & Push Backend v1
      - name: Build & Push Backend v1
        run: |
          IMAGE=docker.io/${{ secrets.DOCKERHUB_USERNAME }}/simple-backend-v1:${GITHUB_SHA}
          docker build -t $IMAGE ./backend-v1
          docker push $IMAGE
          echo "BACKENDV1_IMAGE=$IMAGE" >> $GITHUB_ENV

      # Build & Push Backend v2
      - name: Build & Push Backend v2
        run: |
          IMAGE=docker.io/${{ secrets.DOCKERHUB_USERNAME }}/simple-backend-v2:${GITHUB_SHA}
          docker build -t $IMAGE ./backend-v2
          docker push $IMAGE
          echo "BACKENDV2_IMAGE=$IMAGE" >> $GITHUB_ENV

      # Write kubeconfig
      - name: Write kubeconfig from secret
        run: |
          echo "${{ secrets.KUBECONFIG }}" > $HOME/kubeconfig
          chmod 600 $HOME/kubeconfig
          kubectl --kubeconfig=$HOME/kubeconfig get nodes

      # Deploy with Helm
      - name: Deploy with Helm
        run: |
          helm upgrade --install simple-app charts/simple-app \
            -n staging --create-namespace --wait \
            --kubeconfig=$HOME/kubeconfig \
            --set frontend.image.name=simple-frontend \
            --set frontend.image.tag=${GITHUB_SHA} \
            --set backendV1.image.name=simple-backend-v1 \
            --set backendV1.image.tag=${GITHUB_SHA} \
            --set backendV2.image.name=simple-backend-v2 \
            --set backendV2.image.tag=${GITHUB_SHA}

      # Get Frontend URL
      - name: Get Frontend URL
        run: |
          INGRESS_IP=$(kubectl --kubeconfig=$HOME/kubeconfig -n istio-system get svc istio-ingressgateway -o jsonpath='{.status.loadBalancer.ingress[0].ip}')
          echo "Frontend available at: http://$INGRESS_IP/"
