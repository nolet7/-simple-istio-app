name: CI/CD Deploy Simple Istio App

on:
  push:
    branches: ["main"]
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Build and push Frontend
      - name: Build & Push Frontend
        run: |
          IMAGE=docker.io/${{ secrets.DOCKERHUB_USERNAME }}/simple-frontend
          docker build -t $IMAGE:${GITHUB_SHA} -t $IMAGE:latest ./frontend
          docker push $IMAGE:${GITHUB_SHA}
          docker push $IMAGE:latest
          echo "FRONTEND_IMAGE=$IMAGE:${GITHUB_SHA}" >> $GITHUB_ENV

      # Build and push Backend v1
      - name: Build & Push Backend v1
        run: |
          IMAGE=docker.io/${{ secrets.DOCKERHUB_USERNAME }}/simple-backend-v1
          docker build -t $IMAGE:${GITHUB_SHA} -t $IMAGE:latest ./backend-v1
          docker push $IMAGE:${GITHUB_SHA}
          docker push $IMAGE:latest
          echo "BACKEND_V1_IMAGE=$IMAGE:${GITHUB_SHA}" >> $GITHUB_ENV

      # Build and push Backend v2
      - name: Build & Push Backend v2
        run: |
          IMAGE=docker.io/${{ secrets.DOCKERHUB_USERNAME }}/simple-backend-v2
          docker build -t $IMAGE:${GITHUB_SHA} -t $IMAGE:latest ./backend-v2
          docker push $IMAGE:${GITHUB_SHA}
          docker push $IMAGE:latest
          echo "BACKEND_V2_IMAGE=$IMAGE:${GITHUB_SHA}" >> $GITHUB_ENV

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up kubectl
        uses: azure/setup-kubectl@v4
        with:
          version: 'v1.28.15'

      - name: Set up Helm
        uses: azure/setup-helm@v4
        with:
          version: 'v3.15.4'

      - name: Configure kubeconfig for cloud-v
        run: |
          mkdir -p $HOME/.kube
          echo "${{ secrets.CLOUD_V_KUBECONFIG }}" | base64 -d > $HOME/.kube/config

      - name: Verify cluster access (cloud-v)
        run: |
          kubectl --kubeconfig $HOME/.kube/config get nodes -o wide

      - name: Deploy with Helm (cloud-v, inject SHA tags)
        run: |
          helm upgrade --install simple-istio-app ./charts/simple-app \
            -n simple-istio --create-namespace \
            --kubeconfig $HOME/.kube/config \
            --disable-openapi-validation \
            --set frontend.image.tag=${GITHUB_SHA} \
            --set backendV1.image.tag=${GITHUB_SHA} \
            --set backendV2.image.tag=${GITHUB_SHA}
