name: CI/CD Deploy Simple Istio App

on:
  push:
    branches: ["main"]
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Build and push Frontend
      - name: Build & Push Frontend
        run: |
          IMAGE=docker.io/${{ secrets.DOCKERHUB_USERNAME }}/simple-frontend
          docker build -t $IMAGE:${GITHUB_SHA} -t $IMAGE:latest ./frontend
          docker push $IMAGE:${GITHUB_SHA}
          docker push $IMAGE:latest
          echo "FRONTEND_IMAGE=$IMAGE:${GITHUB_SHA}" >> $GITHUB_ENV

      # Build and push Backend v1
      - name: Build & Push Backend v1
        run: |
          IMAGE=docker.io/${{ secrets.DOCKERHUB_USERNAME }}/simple-backend-v1
          docker build -t $IMAGE:${GITHUB_SHA} -t $IMAGE:latest ./backend-v1
          docker push $IMAGE:${GITHUB_SHA}
          docker push $IMAGE:latest
          echo "BACKEND_V1_IMAGE=$IMAGE:${GITHUB_SHA}" >> $GITHUB_ENV

      # Build and push Backend v2
      - name: Build & Push Backend v2
        run: |
          IMAGE=docker.io/${{ secrets.DOCKERHUB_USERNAME }}/simple-backend-v2
          docker build -t $IMAGE:${GITHUB_SHA} -t $IMAGE:latest ./backend-v2
          docker push $IMAGE:${GITHUB_SHA}
          docker push $IMAGE:latest
          echo "BACKEND_V2_IMAGE=$IMAGE:${GITHUB_SHA}" >> $GITHUB_ENV

      # Install yq for safe YAML editing
      - name: Install yq
        run: |
          sudo wget -qO /usr/local/bin/yq https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64
          sudo chmod +x /usr/local/bin/yq

      # Update Helm values.yaml with commit SHA
      - name: Update Helm values.yaml
        run: |
          yq -i ".frontend.image.tag = \"${GITHUB_SHA}\"" charts/simple-app/values.yaml
          yq -i ".backendV1.image.tag = \"${GITHUB_SHA}\"" charts/simple-app/values.yaml
          yq -i ".backendV2.image.tag = \"${GITHUB_SHA}\"" charts/simple-app/values.yaml

      - name: Commit and push updated values.yaml
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git add charts/simple-app/values.yaml
          git commit -m "Update images to $GITHUB_SHA" || echo "No changes to commit"
          git push https://x-access-token:${GITHUB_TOKEN}@github.com/${{ github.repository }}.git HEAD:main || echo "No changes to push"

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up kubectl
        uses: azure/setup-kubectl@v4
        with:
          version: 'v1.28.15'

      - name: Set up Helm
        uses: azure/setup-helm@v4
        with:
          version: 'v3.15.4'

      - name: Configure kubeconfig for cloud-v
        run: |
          mkdir -p $HOME/.kube
          echo "${{ secrets.CLOUD_V_KUBECONFIG }}" | base64 -d > $HOME/.kube/config

      - name: Verify cluster access (cloud-v)
        run: |
          kubectl --kubeconfig $HOME/.kube/config get nodes -o wide

      - name: Deploy with Helm (cloud-v, skip webhook validation)
        run: |
          helm upgrade --install simple-istio-app ./charts/simple-app \
            -n simple-istio --create-namespace \
            --kubeconfig $HOME/.kube/config \
            --disable-openapi-validation

