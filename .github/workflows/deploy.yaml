name: CI/CD Deploy Simple Istio App

on:
  push:
    branches: ['main']

jobs:
  build-and-deploy:
    runs-on: self-hosted

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Log in to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    # Build & push frontend
    - name: Build & Push Frontend
      run: |
        IMAGE=docker.io/${{ secrets.DOCKERHUB_USERNAME }}/simple-frontend:${{ github.sha }}
        docker build -t $IMAGE ./frontend
        docker push $IMAGE
        echo "FRONTEND_IMAGE=$IMAGE" >> $GITHUB_ENV

    # Build & push backend v1
    - name: Build & Push Backend v1
      run: |
        IMAGE=docker.io/${{ secrets.DOCKERHUB_USERNAME }}/simple-backend-v1:${{ github.sha }}
        docker build -t $IMAGE ./backend-v1
        docker push $IMAGE
        echo "BACKEND_V1_IMAGE=$IMAGE" >> $GITHUB_ENV

    # Build & push backend v2
    - name: Build & Push Backend v2
      run: |
        IMAGE=docker.io/${{ secrets.DOCKERHUB_USERNAME }}/simple-backend-v2:${{ github.sha }}
        docker build -t $IMAGE ./backend-v2
        docker push $IMAGE
        echo "BACKEND_V2_IMAGE=$IMAGE" >> $GITHUB_ENV

    - name: Write kubeconfig from secret
      run: |
        echo "${{ secrets.KUBECONFIG }}" > $HOME/kubeconfig
        chmod 600 $HOME/kubeconfig
        kubectl --kubeconfig=$HOME/kubeconfig get nodes

    - name: Deploy with Helm
      run: |
        helm upgrade --install simple-app charts/simple-app \
          -n staging --create-namespace --wait \
          --kubeconfig=$HOME/kubeconfig \
          --set frontend.image.name=simple-frontend \
          --set frontend.image.tag=${GITHUB_SHA} \
          --set backendV1.image.name=simple-backend-v1 \
          --set backendV1.image.tag=${GITHUB_SHA} \
          --set backendV2.image.name=simple-backend-v2 \
          --set backendV2.image.tag=${GITHUB_SHA}

    - name: Get Frontend URL
      run: |
        NODE_PORT=$(kubectl --kubeconfig=$HOME/kubeconfig -n staging get svc frontend -o jsonpath='{.spec.ports[0].nodePort}')
        NODE_IP=$(kubectl --kubeconfig=$HOME/kubeconfig get nodes -o jsonpath='{.items[0].status.addresses[?(@.type=="InternalIP")].address}')
        echo "Frontend available at: http://$NODE_IP:$NODE_PORT"

